<script src="/plugins/datatable/js/jquery.dataTables.min.js"></script>
<script src="/plugins/datatable/js/dataTables.bootstrap4.min.js"></script>
<script src="/plugins/datatable/js/dataTables.rowReorder.min.js"></script>
<script src="/plugins/datatable/js/dataTables.responsive.min.js"></script>

<link rel="stylesheet" href="/plugins/datatable/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="/plugins/datatable/css/rowReorder.dataTables.min.css">
<link rel="stylesheet" href="/plugins/datatable/css/responsive.dataTables.min.css">

<div class="row">
    <div class="col-12">
        <div class="card card-outline card-primary">
            <div class="card-header">
                <h3 class="card-title">User</h3>
            </div>
            <div class="card-body">
                <div class="col-lg-12">
                    <table class="table table-striped table-bordered table-hover display nowrap" id="dataTable"
                        style="width: 100%;">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>User</th>
                                <th>Apps</th>
                                <th>Role</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    $(function () {
        // initSearchInput();
        var DEFAULT_PAGE_LENGTH = 10;
        dataTable = $('#dataTable').DataTable({
            "iDisplayLength": DEFAULT_PAGE_LENGTH,
            // rowReorder: {
            //     selector: 'td:nth-child(2)'
            // },
            responsive: true,
            aoColumns: [
                { sWidth: '7%' },
                { sWidth: '30%' },
                { sWidth: '15%' },
                { sWidth: '13%' },
                { sWidth: '35%' },
            ],
            serverSide: true,
            "processing": true,
            searchDelay: 100,
            ajax: {
                url: "/admin/user/listuser",
                type: "post",
                "data": function (obj) {
                    var num = 0;
                    var page = 0;
                    console.log(obj);
                    try {
                        num = dataTable.page.len();
                        page = dataTable.page.info().page;
                    } catch (err) {
                        num = DEFAULT_PAGE_LENGTH;
                        page = 0;
                    }
                    return {
                        "nums": num,
                        "page": page,
                        "search": obj.search.value,
                    }
                },
                dataSrc: function (data) {
                    // console.log(data);
                    let initIndex = 0;
                    try {
                        let num = dataTable.page.len();
                        let page = dataTable.page.info().page;
                        initIndex = num * page + 1;
                    } catch (err) {
                        // console.log(err);
                    }
                    try {
                        let users = data.users;
                        let rows = [];
                        for (let i = 0; i < users.length; i++) {
                            let user = users[i];
                            let username = `<a href='/admin/user/detail?username=${user.username}' class="username">${user.username}</a>`
                            let apps = [];
                            user.apps.forEach((value, index) => {
                                apps.push(` <a href="/admin/app/detail?app=${value}">${value}</a>`)
                            })
                            let btn = "";
                            if (user.role != "admin") {
                                btn = renderButtonSetAdmin(user.username);
                            } else {
                                btn = renderButtonRemoveAdmin(user.username);
                            }
                            let row = [initIndex++, username, apps.join(", "), user.role, btn];
                            rows.push(row);
                        }
                        return rows;
                    } catch (err) {
                        console.log(err);
                    }
                }


            },

        });
    })

    function renderButtonSetAdmin(username) {
        return `<button class="btn btn-primary btn-xs btn-set-admin" data-loading-text="<i class='spinner-grow spinner-grow-sm '></i> Verifying..."  username="${username}"><i class="fas fa-users-cog"></i> Set admin</button>`
    }

    function renderButtonRemoveAdmin(username) {
        return `<button class="btn btn-warning btn-xs btn-remove-admin" data-loading-text="<i class='spinner-grow spinner-grow-sm '></i> Verifying..."  username="${username}"><i class="fas fa-user-times"></i> Remove admin</button>`
    }

    function initSearchInput() {
        thead = $('#dataTable thead').html();
        searchRow = `<tr><td></td><td><input type="text" name="search" id="userRegex" class="form-control" placeholder="Search name"/></td><td colspan=3></td></tr>`
        $('#dataTable thead').html(searchRow + thead);
        $('input[name="search"]').on('keyup change', delay(function () {
            // console.log(this.value);
            if (dataTable.search() !== this.value) {
                dataTable.search(this.value).draw();
            }
        }, 70));
    }

    function delay(callback, ms) {
        var timer = 0;
        return function () {
            var context = this, args = arguments;
            clearTimeout(timer);
            timer = setTimeout(function () {
                callback.apply(context, args);
            }, ms || 0);
        };
    }

    $('#dataTable').on("click", ".btn-set-admin", function () {
        let $this = $(this);
        let $row = $this.parents('tr');
        // let username = $row.find(".username").text();
        let username = $this.attr('username');
        console.log(username);
        $this.enableButtonLoading();
        requestSetAdmin(username, function (result) {
            if (result.code > 0) {
                sweetToastAlertSuccess(result.msg);
                dataTable.search(dataTable.search()).draw(false)
            } else {
                sweetToastAlertError(result.msg);
            }

            $this.resetButtonLoading();
        })
    })

    function requestSetAdmin(username, callback) {
        console.log(username);
        $.ajax({
            url: "/admin/user/admin",
            type: "POST",
            data: {
                username: username,
            },
            success: function (result) {
                callback(result);
            },
            error: function (msg) {
                console.log(msg);
            },
        })
    }

    $('#dataTable').on("click", ".btn-remove-admin", function () {
        let $this = $(this);
        let $row = $this.parents('tr');
        // let username = $row.find(".username").text();
        let username = $this.attr('username');
        $this.enableButtonLoading();
        requestRemoveAdmin(username, function (result) {
            if (result.code > 0) {
                sweetToastAlertSuccess(result.msg);
                dataTable.search(dataTable.search()).draw(false)

            } else {
                sweetToastAlertError(result.msg);
            }

            $this.resetButtonLoading();
        })
    })

    function requestRemoveAdmin(username, callback) {
        $.ajax({
            url: "/admin/user/admin",
            type: "DELETE",
            data: {
                username: username,
            },
            success: function (result) {
                callback(result);
            },
            error: function (msg) {
                console.log(msg);
            },
        })
    }

    function removeRow($row, dataTable) {
        let r = $row;
        if ($row.hasClass('child')) {
            console.log($row.prev('tr'));
            dataTable.row($row.prev('tr')).remove().draw();
        } else {
            dataTable
                .row(r)
                .remove()
                .draw();
        }
    }

    function searchTable() {

    }
</script>